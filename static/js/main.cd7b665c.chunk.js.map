{"version":3,"sources":["components/shop-header/index.js","components/shop-header/shop-header.js","components/bookstore-service-context/index.js","components/hoc/with-bookstore-service.js","actions/index.js","utils/compose.js","components/book-list-item/index.js","components/book-list-item/book-list-item.js","components/spinner/index.js","components/spinner/spinner.js","components/error-indicator/index.js","components/error-indicator/error-indicator.js","components/book-list/book-list.js","components/book-list/index.js","components/shopping-cart-table/index.js","components/shopping-cart-table/shopping-cart-table.js","components/pages/home-page.js","components/pages/cart-page.js","components/app/index.js","components/app/app.js","components/error-boundry/index.js","components/error-boundry/error-boundry.js","services/bookstore-service.js","reducers/loadBooksActions.js","reducers/cartActions.js","reducers/index.js","store.js","index.js"],"names":["ShopHeader","numItems","total","className","to","React","createContext","BookstoreServiceProvider","Provider","BookstoreServiceConsumer","Consumer","withBookstoreService","Wrapped","props","bookstoreService","fetchBooks","dispatch","type","getBooks","then","data","payload","catch","error","booksError","bookAddedToCart","bookId","compose","funcs","component","reduceRight","wrapped","f","BookListItem","book","onAddedToCart","title","author","price","coverImage","src","alt","onClick","Spinner","ErrorIndicator","connect","console","message","BookList","books","map","key","id","BookListContainer","this","loading","Component","state","bookList","ownProps","ShoppingCartTable","shoppingCart","items","cartItems","orderTotal","onIncrease","onDecrease","onDelete","item","idx","count","renderRow","HomePage","CartPage","App","role","path","exact","ErrorBoundry","hasError","errorInfo","setState","isError","log","children","BookstoreService","Promise","resolve","reject","setTimeout","Math","random","Error","loadBooksActions","action","undefined","updateOrder","removeItemFromCart","filter","updateItemToCart","newItem","changeCount","quantity","find","itemId","findIndex","addItemToCart","calcTotal","reduce","cartActions","reducer","store","createStore","ReactDOM","render","value","document","getElementById"],"mappings":"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","file":"static/js/main.cd7b665c.chunk.js","sourcesContent":["import ShopHeader from './shop-header';\n\nexport default ShopHeader;","import React from 'react';\nimport './shop-header.css';\nimport { Link } from 'react-router-dom';\n\nconst ShopHeader = ({ numItems, total }) => {\n  return (\n    <header className=\"shop-header row\">\n      <Link className=\"logo text-dark\" to=\"/\">ReStore</Link>\n      <Link className=\"shopping-cart\" \n      \t\t\tto=\"/cart\">\n        <i className=\"cart-icon fa fa-shopping-cart\" />\n        {numItems} items (${total})\n      </Link>\n    </header>\n  );\n};\n\nexport default ShopHeader;\n","import React from 'react';\r\n\r\nconst { Provider : BookstoreServiceProvider,\r\n        Consumer: BookstoreServiceConsumer } = React.createContext();\r\n\r\nexport {\r\n    BookstoreServiceProvider,\r\n    BookstoreServiceConsumer\r\n}\r\n\r\n","import React from 'react';\r\nimport { BookstoreServiceConsumer} from '../bookstore-service-context';\r\n\r\nconst withBookstoreService = () => (Wrapped) => {\r\n    return (props) => {\r\n        return (\r\n            <BookstoreServiceConsumer>\r\n                {\r\n                    (bookstoreService) => {\r\n                    return (<Wrapped {...props}\r\n                                    bookstoreService={bookstoreService} />);\r\n                    }\r\n                }\r\n            </BookstoreServiceConsumer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withBookstoreService;","\r\nconst booksRequested = () => {\r\n    return {\r\n        type: 'FETCH_BOOKS_REQUEST'\r\n    }\r\n}\r\n\r\nconst booksLoaded = (newBooks) => {\r\n    return {\r\n        type: 'FETCH_BOOKS_SUCCESS',\r\n        payload: newBooks\r\n    }\r\n}\r\n\r\nconst booksError = (error) => {\r\n    return {\r\n        type: 'FETCH_BOOK_FAILURE',\r\n        payload: error\r\n    }\r\n}\r\n\r\nconst fetchBooks = (bookstoreService, dispatch ) => () => {\r\n    dispatch(booksRequested());\r\n    bookstoreService.getBooks()\r\n      .then((data) => dispatch(booksLoaded(data)))\r\n      .catch((error) => dispatch(booksError(error)));\r\n}\r\n\r\nconst bookAddedToCart = (bookId) => {\r\n    return {\r\n        type: 'BOOK_ADDED_TO_CART',\r\n        payload: bookId\r\n    }\r\n}\r\n\r\nconst bookDecreaseFromCart = (bookId) => {\r\n    return {\r\n        type: 'BOOK_DECREASE_FROM_CART',\r\n        payload: bookId\r\n    }\r\n}\r\n\r\nconst bookDeletedFromCart = (bookId) => {\r\n    return {\r\n        type: 'BOOK_DELETED_FROM_CART',\r\n        payload: bookId\r\n    }\r\n}\r\n\r\n\r\nexport {\r\n    fetchBooks,\r\n    bookAddedToCart,\r\n    bookDecreaseFromCart, \r\n    bookDeletedFromCart\r\n}","const compose = (...funcs) => (component) => {\r\n  return funcs.reduceRight(\r\n      (wrapped, f) => f(wrapped), component);\r\n};\r\n\r\nexport default compose;","import BookListItem from './book-list-item';\r\n\r\nexport default BookListItem;","import React from 'react';\r\nimport './book-list-item.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst BookListItem = ({ book, onAddedToCart }) => {\r\n  const { title, author, price, coverImage } = book;\r\n  return (\r\n      <div className=\"book-list-item\">\r\n        <div className=\"book-cover\">\r\n          <img src={coverImage} alt=\"cover\" />\r\n        </div>\r\n        <div className=\"book-details\">\r\n          <Link to=\"#\" className=\"book-title\">{title}</Link>\r\n          <div className=\"book-author\">{author}</div>\r\n          <div className=\"book-price\">${price}</div>\r\n          <button className=\"btn btn-info add-to-cart\"\r\n                  onClick={onAddedToCart}>Add to cart</button>\r\n        </div>\r\n\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default BookListItem;","import Spinner from './spinner';\r\n\r\nexport default Spinner;","import React from 'react';\r\n\r\nconst Spinner = () => {\r\n    return(\r\n      <div className='spinner'>...Loading</div>\r\n    );\r\n}\r\n\r\nexport default Spinner;","import ErrorIndicator from './error-indicator';\r\n\r\nexport default ErrorIndicator;","import React from 'react';\r\nimport './error-indicator.css';\r\nimport { connect } from 'react-redux';\r\n\r\nconst ErrorIndicator = (props) => {\r\n  console.error(props.error);\r\n  return(\r\n      <div className='error-indicator'>\r\n        {props.error.message}\r\n      </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = ({ error }) => {\r\n  return {\r\n    error,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ErrorIndicator);\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport './book-list.css';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { withBookstoreService } from '../hoc';\r\nimport { fetchBooks, bookAddedToCart } from '../../actions';\r\nimport { compose } from '../../utils';\r\n\r\nimport BookListItem from '../book-list-item';\r\nimport Spinner from '../spinner';\r\nimport ErrorIndicator from \"../error-indicator\";\r\n\r\nconst BookList = ({ books, onAddedToCart }) => {\r\n  return(\r\n    <ul className=\"book-list\">\r\n      {\r\n        books.map((book) => {\r\n          return(<li key={book.id}>\r\n                   <BookListItem book={book}\r\n                                 onAddedToCart={() => onAddedToCart(book.id)}/>\r\n                 </li>);\r\n        })\r\n      }\r\n    </ul>\r\n  );\r\n}\r\n\r\nclass BookListContainer extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.fetchBooks();\r\n  }\r\n\r\n  render () {\r\n    const { loading, error, books, onAddedToCart } = this.props;\r\n    if(error) return <ErrorIndicator />\r\n    if(loading) return <Spinner />\r\n    return <BookList books={books}\r\n                     onAddedToCart={onAddedToCart} />\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { books, loading, error } = state.bookList;\r\n  return({ books,\r\n           loading,\r\n           error\r\n  });\r\n}\r\n\r\nconst mapActionsToProps = (dispatch, ownProps) => {\r\n  return{\r\n    fetchBooks: fetchBooks(ownProps.bookstoreService, dispatch),\r\n    onAddedToCart: (id) => { dispatch(bookAddedToCart(id))}\r\n  }\r\n}\r\n\r\nexport default compose(\r\n                    withBookstoreService(),\r\n                    connect(mapStateToProps,mapActionsToProps)\r\n                      )(BookListContainer);","import BookList from './book-list';\r\n\r\nexport default BookList;","import ShoppingCartTable from './shopping-cart-table';\n\nexport default ShoppingCartTable;\n","import React from 'react';\nimport './shopping-cart-table.css';\n\nimport { connect } from 'react-redux';\nimport { bookAddedToCart, bookDecreaseFromCart, bookDeletedFromCart } from '../../actions';\n\nconst ShoppingCartTable = ({ items, total, onIncrease, onDecrease, onDelete }) => {\n  const renderRow = (item, idx) => {\n    const{ id, title, count, total } = item;\n    return(\n      <tr key={id}>\n        <td>{idx + 1}</td>\n        <td>{title}</td>\n        <td>{count}</td>\n        <td>${total}</td>\n        <td>\n          <button className=\"btn btn-outline-danger btn-sm float-right\"\n                  onClick={() => onDelete(id)}>\n            <i className=\"fa fa-trash-o\" />\n          </button>\n          <button className=\"btn btn-outline-success btn-sm float-right\"\n                  onClick={() => onIncrease(id)}>\n            <i className=\"fa fa-plus-circle\" />\n          </button>\n          <button className=\"btn btn-outline-warning btn-sm float-right\"\n                  onClick={() => onDecrease(id)}>\n            <i className=\"fa fa-minus-circle\" />\n          </button>\n        </td>\n      </tr>\n    )}\n\n  return (\n    <div className=\"shopping-cart-table\">\n      <h2>Your Order</h2>\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Item</th>\n            <th>Count</th>\n            <th>Price</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n\n        <tbody>\n            {items.map((item, idx) => renderRow(item, idx))}\n        </tbody>\n      </table>\n\n      <div className=\"total\">\n        Total: ${total}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const { cartItems, orderTotal} = state.shoppingCart;\n  return {\n    items: cartItems,\n    total: orderTotal\n  }\n}\n\nconst mapActionsToProps = (dispatch) => {\n  return{\n    onIncrease: (id) => dispatch(bookAddedToCart(id)),\n    onDecrease: (id) => dispatch(bookDecreaseFromCart(id)),\n    onDelete: (id) => dispatch(bookDeletedFromCart(id))\n  }\n}\n\nexport default connect(mapStateToProps, mapActionsToProps)(ShoppingCartTable);\n","import React from 'react';\r\nimport BookList from '../book-list';\r\nimport ShoppingCartTable from \"../shopping-cart-table\";\r\n\r\nconst HomePage = () => {\r\n  return(\r\n      <div>\r\n        <BookList />\r\n        <ShoppingCartTable />\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;","import React from 'react';\r\n\r\nconst CartPage = () => {\r\n  return(\r\n      <div>Cart page</div>\r\n  );\r\n}\r\n\r\nexport default CartPage;","import App from './app';\r\n\r\nexport default App;","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport ShopHeader from '../shop-header';\r\nimport { HomePage, CartPage } from '../pages';\r\n\r\nimport './app.css';\r\n\r\nconst App = () => {\r\n  return (\r\n      <main role=\"main\" className=\"container\">\r\n        <ShopHeader numItems={5} total={210}/>\r\n        <Switch>\r\n          <Route\r\n              path=\"/\"\r\n              component={HomePage}\r\n              exact />\r\n\r\n          <Route\r\n              path=\"/cart\"\r\n              component={CartPage}\r\n          />\r\n        </Switch>\r\n      </main>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import ErrorBoundry from './error-boundry';\r\n\r\nexport default ErrorBoundry;","import React, { Component } from 'react';\r\nimport ErrorIndicator from '../error-indicator';\r\n\r\nexport default class ErrorBoundry extends Component {\r\n    state={\r\n        hasError: false\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        this.setState({isError: true});\r\n        console.log('An error has occurred', error);\r\n        console.log('In component', errorInfo);\r\n    }\r\n\r\n    render(){\r\n        if(this.state.hasError)\r\n            return <ErrorIndicator />\r\n        return this.props.children;\r\n    }\r\n}\r\n","export default class BookstoreService {\r\n\r\n    data = [\r\n            {\r\n                id: 1,\r\n                title: 'Production-Ready Microservices',\r\n                author: 'Susan J. Fowler',\r\n                price: 32,\r\n                coverImage: 'https://images-na.ssl-images-amazon.com/images/I/41yJ75gpV-L._SX381_BO1,204,203,200_.jpg'},\r\n            {\r\n                id: 2,\r\n                title: 'Release It!',\r\n                author: 'Michael T. Nygard',\r\n                price: 45,\r\n                coverImage: 'https://images-na.ssl-images-amazon.com/images/I/414CRjLjwgL._SX403_BO1,204,203,200_.jpg'}\r\n        ];\r\n\r\n    getBooks () {\r\n        return new Promise ((resolve, reject) => {\r\n            setTimeout( () => {\r\n                if(Math.random() > 1.75)\r\n                    reject(new Error('Terrible error detected'))\r\n                else resolve(this.data);\r\n            } ,700);\r\n        });\r\n    }\r\n}","\r\nconst loadBooksActions = (state, action) => {\r\n\tif(state === undefined)\r\n        return {\r\n            books: [],\r\n            loading: true,\r\n            error: null,\r\n        }\r\n    switch(action.type) {\r\n    case 'FETCH_BOOKS_REQUEST':\r\n        return {\r\n            books: [],\r\n            loading: true,\r\n            error: false\r\n        };\r\n    case 'FETCH_BOOKS_SUCCESS':\r\n        return {\r\n            books: action.payload,\r\n            loading: false,\r\n            error: false\r\n        };\r\n\r\n    case 'FETCH_BOOK_FAILURE':\r\n        return {\r\n            books: [],\r\n            loading: false,\r\n            error: action.payload\r\n        };\r\n\tdefault: \r\n        return state.bookList;\r\n    }\r\n}\r\n\r\nexport default loadBooksActions;","\r\nconst updateOrder = (id, state, action) => {\r\n\tconst { shoppingCart: { cartItems }, bookList: { books } } = state;\r\n\tconst addItemToCart = (item) => {\r\n\t\treturn [ ...cartItems, item];\r\n\t}\r\n\r\n\tconst removeItemFromCart = (item) => {\r\n\t\treturn cartItems.filter((item) => {\r\n      return item.id !== id\r\n  \t});\r\n\t}\r\n\r\n\tconst updateItemToCart = (newItem) => {\r\n\t\treturn cartItems.map((item) => {\r\n      if(item.id === id)\r\n          return newItem;\r\n      return item;\r\n    });\r\n\t}\r\n\r\n\tconst changeCount = ( book, item = {}, quantity) => {\r\n    const { id = book.id, title = book.title, count = 0, total = 0 } = item;\r\n    return {\r\n      id,\r\n      title,\r\n      count: count + quantity,\r\n      total: total + quantity*book.price,\r\n    }\r\n\t}\r\n\r\n\tconst book = books.find((book) => book.id === id);\r\n\tconst itemId = cartItems.findIndex((item) => item.id === id);\r\n\tconst item = cartItems[itemId];\r\n\r\n\tswitch (action) {\r\n\t\tcase 'dec':\r\n\t\t\tif(item.count === 1)\r\n\t\t\t\treturn removeItemFromCart(item);\r\n\t\t\treturn updateItemToCart(changeCount(book, item, -1));\r\n\t\tcase 'inc':\r\n\t\t\tif(item)\r\n\t\t\t\treturn updateItemToCart(changeCount(book, item, 1));\r\n\t\t\treturn addItemToCart(changeCount(book, item, 1));\r\n\t\tcase 'del':\r\n\t\t\treturn removeItemFromCart(item);\r\n\t}\r\n}\r\n\r\nconst calcTotal = (items) => {\r\n\treturn items.reduce((total, item) => {\r\n\t\treturn total + item.total;\r\n\t}, 0);\r\n}\r\n\r\n\r\nconst cartActions = (state, action) => {\r\n\tif(state === undefined)\r\n\t\treturn {\r\n\t\t\tcartItems:[],\r\n      orderTotal: 0\r\n\t\t}\r\n\t\r\n\tswitch (action.type) {\r\n   \tcase 'BOOK_ADDED_TO_CART':\r\n      return {\r\n          cartItems: updateOrder(action.payload, state, 'inc'),\r\n          orderTotal: calcTotal(state.shoppingCart.cartItems)\r\n      }\r\n      \r\n  \tcase 'BOOK_DECREASE_FROM_CART':\r\n      return {\r\n          cartItems: updateOrder(action.payload, state, 'dec'),\r\n          orderTotal: calcTotal(state.shoppingCart.cartItems)\r\n      }\r\n  \tcase 'BOOK_DELETED_FROM_CART':\r\n      return {\r\n          cartItems: updateOrder(action.payload, state, 'del'),\r\n          orderTotal: calcTotal(state.shoppingCart.cartItems)\r\n      }\r\n\t\tdefault: \r\n        return state.shoppingCart;\r\n\t}\r\n}\r\n\r\nexport default cartActions;","import loadBooksActions from './loadBooksActions';\r\nimport cartActions from './cartActions';\r\n\r\nconst reducer = (state , action) => {\r\n    //console.log(action);\r\n    return {\r\n        bookList: loadBooksActions(state, action),\r\n        shoppingCart: cartActions(state, action)\r\n    }\r\n}\r\n\r\nexport default reducer;","import { createStore } from 'redux';\r\nimport reducer from './reducers';\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport App from './components/app';\nimport ErrorBoundry from './components/error-boundry';\nimport BookstoreService from './services/bookstore-service';\nimport { BookstoreServiceProvider } from './components/bookstore-service-context';\nimport store from './store';\n\nconst bookstoreService = new BookstoreService ();\n\nReactDOM.render (\n    <Provider store={store}>\n      <ErrorBoundry>\n        <BookstoreServiceProvider value={bookstoreService}>\n          <Router>\n            <App />\n          </Router>\n        </BookstoreServiceProvider>\n      </ErrorBoundry>\n    </Provider>\n    , document.getElementById('root'));"],"sourceRoot":""}